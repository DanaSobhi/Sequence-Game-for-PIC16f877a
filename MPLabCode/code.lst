MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[205]: Found directive in column 1. (PROCESSOR)
                      00001 PROCESSOR 16F877
                      00002 ; Clock = XT 4MHz, standard fuse settings
Warning[205]: Found directive in column 1. (__CONFIG)
2007   3731           00003 __CONFIG 0x3731
                      00004 
                      00005 ; LABEL EQUATES
Warning[205]: Found directive in column 1. (INCLUDE)
                      00006 INCLUDE "P16F877A.INC"
                      00001         LIST
                      00002 ; P16F877A.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00398         LIST
                      00007 
  00000028            00008 Cursor EQU 28
  00000039            00009 Timer EQU 39
  00000030            00010 Char EQU 30 
  00000046            00011 Index EQU 46
  00000048            00012 Characters EQU 48
  00000047            00013 Current_char EQU 47
  00000049            00014 BlinkCount EQU 49 ; Counting blinks
                      00015 
  00000050            00016 LED_States EQU 50 ; Register to store LED states
  00000051            00017 Seed EQU 51 ; Randomization seed (must be non-zero)
  00000052            00018 RandomCounter EQU 52 ; Counter for randomization
  00000053            00019 Score EQU 53 ; Register to store user score
                      00020 
                      00021 ; user input
  00000054            00022 TEMP1 EQU 54 ; Temporary register for the first input LED
                      00023 
                      00024 
                      00025 ; Random leds 
  00000010            00026 SEQ1 EQU 10 ;Temporary register for the 1st random LED
                      00027 
  00000064            00028 Wrong EQU 64
  00000063            00029 Lives EQU 63 
  00000052            00030 Count EQU 0x52
  00000054            00031 InputCount EQU 0x54
  00000055            00032 CurrentInputIndex EQU 0x55
  00000056            00033 SequencePointer EQU 0x56
  00000057            00034 UserInput EQU 0x57
  00000062            00035 timerCounter EQU 62
                      00036 
  00000000            00037 BLUE_LED EQU 0 ; RA0 for blue LED
  00000001            00038 GREEN_LED EQU 1 ; RA1 for green LED
  00000002            00039 RED_LED EQU 2 ; RA2 for red LED
  00000003            00040 YELLOW_LED EQU 3 ; RA3 for yellow LED
                      00041 
                      00042 ; Button pin definitions
  00000001            00043 BLUE_BTN EQU 1 ; RB1 for blue button
  00000002            00044 GREEN_BTN EQU 2 ; RB2 for green button
  00000003            00045 RED_BTN EQU 3 ; RB3 for red button
  00000004            00046 YELLOW_BTN EQU 4 ; RB4 for yellow button
                      00047 
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000001            00048 RS EQU 1 ; Register select output bit
  00000002            00049 E EQU 2 ; Display data strobe
                      00050 
                      00051 ; Program Begins ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00052         ORG 0 ; Default start address
0000   0000           00053         NOP ; Required for ICD mode
0001   2???           00054         GOTO INITIALIZE
                      00055 
0002                  00056 INITIALIZE:
                      00057     ; Configure Timer0 and related settings in Bank1
0002   1683 1303      00058     BANKSEL OPTION_REG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0004   1281           00059     BCF     OPTION_REG, T0CS   ; Timer0 clock source = internal
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0005   1181           00060     BCF     OPTION_REG, PSA    ; Prescaler assigned to Timer0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0006   1501           00061     BSF     OPTION_REG, PS2    ; Set prescaler to 1:256
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0007   1481           00062     BSF     OPTION_REG, PS1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   1401           00063     BSF     OPTION_REG, PS0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0009   1381           00064     BCF     OPTION_REG, NOT_RBPU ; Enable PORTB pull-ups
                      00065 
                      00066     ; Configure I/O directions in Bank1
000A   30F0           00067     MOVLW   B'11110000'        ; RA0-RA3 as outputs for LEDs
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000B   0085           00068     MOVWF   TRISA
000C   30FF           00069     MOVLW   B'11111111'        ; PORTB as input
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000D   0086           00070     MOVWF   TRISB
000E   0185           00071     CLRF    PORTA              ; Clear all LEDs initially
                      00072         ; LCD 
000F   1683 1303      00073         BANKSEL TRISC ; Select bank 1
0011   30F0           00074         MOVLW B'11110000' ; Keypad direction code
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0012   0087           00075         MOVWF TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0013   0188           00076         CLRF TRISD ; Display port is output
0014   0188           00077         CLRF PORTD ; Clear display outputs
                      00078 
0015   1683 1303      00079         BANKSEL TRISB          ; Switch to Bank 1
0017   30FE           00080         MOVLW   b'11111110'    ; RB0 = output (if needed), RB1-RB4 = inputs
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0018   0086           00081         MOVWF   TRISB
0019   1283 1303      00082         BANKSEL PORTB          ; Return to Bank 0
001B   0186           00083         CLRF    PORTB          ; Initialize PORTB outputs to 0
                      00084 
                      00085     ; Initialize ports and variables in Bank0
001C   1283 1303      00086     BANKSEL PORTC
001E   30FF           00087     MOVLW   0xFF
001F   0087           00088     MOVWF   PORTC              ; Set keypad outputs high
0020   0188           00089     CLRF    PORTD              ; Clear display outputs
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0021   0185           00090     CLRF    PORTA              ; Clear all LEDs initially
0022   3001           00091     MOVLW   0x1
0023   00D1           00092     MOVWF   Seed               ; Initialize random seed (non-zero)
0024   01D0           00093     CLRF    LED_States         ; Clear LED states
0025   01D2           00094     CLRF    RandomCounter      ; Initialize randomization counter
0026   01D3           00095     CLRF    Score             
                      00096 
0027   3001           00097         MOVLW D'1' 
0028   00D3           00098         MOVWF Score   ; Initialize score
0029   3003           00099         MOVLW D'3'
002A   00E3           00100         MOVWF Lives ; give user 3 lives
                      00101 
002B   2???           00102     GOTO    WaitForButtonPress ; Wait for the first button press
                      00103 
                      00104 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00105 
                      00106 ; Main program
002C                  00107 WaitForButtonPress:
                      00108     ; Wait until any button is pressed
002C   2???           00109         CALL inid ; Initialize the display
002D   3003           00110         MOVLW 3 ; Set initial blink count to 3
002E   00C9           00111         MOVWF BlinkCount
                      00112 
                      00113 
002F                  00114 BlinkLoop:
002F   08C9           00115         MOVF BlinkCount, F ; Check if BlinkCount is zero
0030   1903           00116         BTFSC STATUS, Z ; Skip next instruction if BlinkCount is not zero
0031   2???           00117         GOTO WaitLoop ; If count is zero, move to next step
0032   2???           00118         CALL DisplayMessage ; Show the message
0033   2???           00119         CALL OneSecondDelay ; Wait 1 second with message shown
0034   2???           00120         CALL ClearDisplay ; Clear the display
0035   2???           00121         CALL DisplayMessage ; Show the message
0036   03C9           00122         DECF BlinkCount, F ; Decrease blink counter
0037   2???           00123         GOTO BlinkLoop ; Repeat the process
                      00124 
0038   1283 1303      00125     BANKSEL PORTB
003A                  00126 WaitLoop:
003A   1C86           00127     BTFSS   PORTB, BLUE_BTN
003B   2???           00128     GOTO    StartLevel1
003C   1D06           00129     BTFSS   PORTB, GREEN_BTN
003D   2???           00130     GOTO    StartLevel1
003E   1D86           00131     BTFSS   PORTB, RED_BTN
003F   2???           00132     GOTO    StartLevel1
0040   1E06           00133     BTFSS   PORTB, YELLOW_BTN
0041   2???           00134     GOTO    StartLevel1
0042   2???           00135     GOTO    WaitLoop
                      00136 
0043                  00137 StartLevel1:
                      00138     ; Level 1: Start 3 LED random sequence
0043   2???           00139     CALL DisplayLevel         ; Display "LEVEL 1" on the LCD
0044   2???           00140     CALL RandomLEDSequence     ; Generate and display the random LED sequence
0045   2???           00141     CALL CheckUserInput
0046   2???           00142     GOTO WaitForButtonPress    ; Return to waiting for button press
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00143 
0047                  00144 NextLeveL:
                      00145     ;Next level for all levels:
0047   2???           00146     CALL DisplayLevel         ; Display "LEVEL" on the LCD
0048   2???           00147         CALL onesecond
0049   2???           00148         CALL DisplayStart
004A   2???           00149     CALL RandomLEDSequence     ; Generate and display the random LED sequence
004B   2???           00150     CALL CheckUserInput
004C   2???           00151     GOTO WaitForButtonPress    ; Return to waiting for button press
004D   2???           00152         GOTO NextLeveL ;keep looping after every level
                      00153 
                      00154 
                      00155 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
004E                  00156 RandomLEDSequence:
004E   1283 1303      00157     BANKSEL SEQ1          ; Select bank where SEQ1 is located
0050   3010           00158     MOVLW   SEQ1
0051   0084           00159     MOVWF   FSR           ; Set FSR to point to SEQ1
0052   3003           00160     MOVLW   D'3'          ; Initial 3 LEDs
0053   00D2           00161     MOVWF   Count
0054                  00162 GenerateInitial:
0054   2???           00163     CALL    UpdateSeed
0055   2???           00164     CALL    GetRandomLED
0056   0080           00165     MOVWF   INDF          ; Store the value at the address pointed by FSR
0057   0A84           00166     INCF    FSR, F        ; Move to the next memory location
0058   2???           00167     CALL    LightUpLED
0059   0BD2           00168     DECFSZ  Count, 1
005A   2???           00169     GOTO    GenerateInitial
                      00170 
                      00171     ; Determine additional LEDs based on Score
005B   3002           00172     MOVLW   2             ; Check if Score >= 2
005C   0253           00173     SUBWF   Score, W      ; W = Score - 2
005D   1C03 2???      00174     BNC     NoAddition    ; If Score < 2, branch to NoAddition
005F   0353           00175     DECF    Score, W      ; Calculate additional LEDs (Score - 1)
0060   00D2           00176     MOVWF   Count         ; Set loop counter
                      00177 
                      00178     ; Reset FSR to the end of the initial sequence
0061   3010           00179     MOVLW   SEQ1
0062   3E03           00180     ADDLW   D'3'          ; Point to the end of the initial 3 LEDs
0063   0084           00181     MOVWF   FSR
                      00182 
0064                  00183 GenerateAdditional:
0064   2???           00184     CALL    UpdateSeed
0065   2???           00185     CALL    GetRandomLED
0066   0080           00186     MOVWF   INDF          ; Store the value at the address pointed by FSR
0067   0A84           00187     INCF    FSR, F        ; Move to the next memory location
0068   2???           00188     CALL    LightUpLED
0069   0BD2           00189     DECFSZ  Count, 1
006A   2???           00190     GOTO    GenerateAdditional
                      00191 
006B                  00192 NoAddition:
006B   0008           00193     RETURN
                      00194 
                      00195 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00196 
006C                  00197 CheckUserInput:
006C   2???           00198     CALL    TurnOffLED    ; Ensure LEDs are off
006D   2???           00199     CALL    displayPlay   ; Display "PLAY"
006E   3000           00200     MOVLW   0x00
006F   00E2           00201     MOVWF   timerCounter  ; Reset timer counter
0070   3000           00202         MOVLW   0x00 
0071   00E4           00203         MOVWF   Wrong
                      00204 
                      00205     ; Calculate required inputs (Score + 2)
0072   0853           00206     MOVF    Score, W
0073   3E02           00207     ADDLW   D'2'          ; WREG = Score + 2
0074   00D4           00208     MOVWF   InputCount    ; Store required input count
                      00209 
                      00210     ; Initialize pointers and counters
0075   01D5           00211     CLRF    CurrentInputIndex ; Reset input counter
0076   3010           00212     MOVLW   SEQ1              ; Point to start of sequence
0077   00D6           00213     MOVWF   SequencePointer   ; Store sequence start address
                      00214 
0078                  00215 InputCheckLoop:
                      00216     ; Debug: Display current sequence value
0078   0856           00217     MOVF    SequencePointer, W
0079   0084           00218     MOVWF   FSR
007A   0800           00219     MOVF    INDF, W
                      00220 
                      00221     ; Check if all inputs have been verified
007B   0855           00222     MOVF    CurrentInputIndex, W
007C   0254           00223     SUBWF   InputCount, W     ; InputCount - CurrentInputIndex
007D   1D03           00224     BTFSS   STATUS, Z         ; Skip if CurrentInputIndex == InputCount
007E   2???           00225     GOTO    WaitForInput      ; Continue checking inputs
007F   2???           00226     GOTO    CheckinputSequence  ; Exit loop when all inputs are correct
                      00227 
0080                  00228 WaitForInput:
                      00229     ; Only check timer if it's not the last input
0080   0855           00230     MOVF    CurrentInputIndex, W
0081   0254           00231     SUBWF   InputCount, W     ; InputCount - CurrentInputIndex
                      00232     ;BTFSC   STATUS, Z         ; Skip if CurrentInputIndex == InputCount (last input)
                      00233     ;GOTO    SkipTimerCheck    ; Skip timer check for the last input
0082   2???           00234     CALL    CheckTimer1       ; Handle timer checks (only for non-last inputs)
                      00235 
0083                  00236 SkipTimerCheck:
0083   2???           00237     CALL    checkWhichbutton  ; Check for button press (result in W)
0084   39FF           00238     ANDLW   0xFF              ; Test if any button pressed
0085   1903           00239     BTFSC   STATUS, Z         ; If no button pressed, keep checking
0086   2???           00240     GOTO    WaitForInput
                      00241 
                      00242     ; Process valid input
0087   00D7           00243     MOVWF   UserInput         ; Store button press value
0088   0085           00244     MOVWF   PORTA             ; Light up corresponding LED
0089   2???           00245     CALL    OneSecondDelay
008A   2???           00246     CALL    TurnOffLED
                      00247 
                      00248     ; Verify against sequence
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008B   0856           00249     MOVF    SequencePointer, W ; Get current sequence address
008C   0084           00250     MOVWF   FSR               ; Point FSR to sequence element
008D   0800           00251     MOVF    INDF, W           ; Get sequence value
008E   0657           00252     XORWF   UserInput, W      ; Compare with user input
008F   1D03           00253     BTFSS   STATUS, Z         ; Check for match
0090   2???           00254     GOTO    WrongInput   ; Handle incorrect input
                      00255 
0091                  00256 Continue:
                      00257     ; If input matches, check if it's the last input
0091   0AD5           00258     INCF    CurrentInputIndex, F ; Increment input counter
0092   0855           00259     MOVF    CurrentInputIndex, W ; Load current input index
0093   0254           00260     SUBWF   InputCount, W     ; InputCount - CurrentInputIndex
0094   1D03           00261     BTFSS   STATUS, Z         ; Skip if CurrentInputIndex == InputCount (last input)
0095   2???           00262     GOTO    MoveToNextInput   ; Not the last input, continue checking
                      00263 
                      00264     ; If it's the last input go check
0096   2???           00265     GOTO    CheckinputSequence
                      00266 
0097                  00267 WrongInput:
0097   3001           00268         MOVLW   0x01 
0098   00E4           00269         MOVWF   Wrong
0099   2???           00270         GOTO Continue
                      00271 
009A                  00272 CheckinputSequence:
009A   0864           00273         MOVF    Wrong, W            ; Load Wrong flag into W
009B   39FF           00274     ANDLW   0xFF                ; Test if Wrong flag is non-zero
009C   1D03           00275     BTFSS   STATUS, Z           ; Skip next instruction if Wrong == 0
009D   2???           00276     GOTO    DisplayTryagain     ; Go to "TRY AGAIN" if any error was detected
                      00277         ;if not
009E   2???           00278         GOTO    AllInputsCorrect
                      00279 
009F                  00280 MoveToNextInput:
                      00281     ; Move to next sequence element
009F   0AD6           00282     INCF    SequencePointer, F ; Next sequence address
00A0   3000           00283     MOVLW   0x00
00A1   00E2           00284     MOVWF   timerCounter       ; Reset timer for next input
00A2   2???           00285     GOTO    InputCheckLoop     ; Continue checking inputs
                      00286 
00A3                  00287 AllInputsCorrect:
00A3   2???           00288     CALL    DisplayCongratulation
00A4   2???           00289     CALL    IncrementScore     ; Advance to next level
00A5   2???           00290     GOTO    NextLeveL
                      00291 
00A6                  00292 checkWhichbutton:
00A6   1283 1303      00293         BANKSEL PORTB
                      00294         ; Check Blue Button (RB1)
00A8   1C86           00295         BTFSS PORTB, BLUE_BTN
00A9   3401           00296     RETLW   b'00000001'
                      00297         ; Check Green Button (RB2)
00AA   1D06           00298         BTFSS PORTB, GREEN_BTN
00AB   3402           00299     RETLW   b'00000010'
                      00300         ; Check Red Button (RB3)
00AC   1D86           00301         BTFSS PORTB, RED_BTN
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AD   3404           00302     RETLW   b'00000100'
                      00303         ; Check Yellow Button (RB4)
00AE   1E06           00304         BTFSS PORTB, YELLOW_BTN
00AF   3408           00305     RETLW   b'00001000'
                      00306         ; no button checked
00B0   3400           00307         RETLW 0x00 
                      00308 
                      00309 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
00B1                  00310 CheckTimer1:
00B1   0AE2           00311             incf timerCounter, F        ;increment the timer
00B2   30FA           00312                 MOVLW   D'250'          ; Load count 
00B3   2???           00313                 CALL    xms
                      00314                 ; min is 60000ms 
00B4   30E6           00315         MOVLW   D'230'           ; 230 iterations
00B5   0662           00316                 xorwf timerCounter, W  ;check if timer reached limit
00B6   1903           00317                 btfsc STATUS, Z ; when res is zero Z = 1
00B7   2???           00318                 call DisplayTimeover  ; do this when equal 
                      00319 
00B8   3000           00320                 MOVLW   0x00       ; Set W to 0
00B9   2???           00321                 GOTO checkWhichbutton
00BA   39FF           00322         ANDLW   0xFF       ; AND W with 0xFF (no change to W, but sets Z flag)
00BB   1903           00323         BTFSC   STATUS, Z  ; Skip next instruction if Z is clear (W != 0)
00BC   2???           00324         GOTO    CheckTimer1
                      00325                 
00BD   0008           00326                 RETURN
                      00327 
                      00328 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
00BE                  00329 IncrementScore:
                      00330     ; Increment the user's score
00BE   0AD3           00331     INCF Score, 1
00BF   0008           00332     RETURN
                      00333 
00C0                  00334 UpdateSeed:
                      00335     ; Dynamically update the Seed value based on Timer0
00C0   1283 1303      00336     BANKSEL TMR0
00C2   0801           00337     MOVF    TMR0, W
00C3   07D1           00338     ADDWF   Seed, F
00C4   0ED1           00339     SWAPF   Seed, F
00C5   09D1           00340     COMF    Seed, F
00C6   0008           00341     RETURN
                      00342 
00C7                  00343 GetRandomLED:
                      00344     ; Use the updated Seed value to generate a random number
00C7   0851           00345     MOVF    Seed, W
00C8   3903           00346     ANDLW   0x03               ; Mask to get values 0-3
00C9   0782           00347     ADDWF   PCL, F
00CA   3401           00348     RETLW   b'00000001'        ; Blue LED (RA0)
00CB   3402           00349     RETLW   b'00000010'        ; Green LED (RA1)
00CC   3404           00350     RETLW   b'00000100'        ; Red LED (RA2)
00CD   3408           00351     RETLW   b'00001000'        ; Yellow LED (RA3)
                      00352 
00CE                  00353 LightUpLED:
                      00354     ; Light up the LED corresponding to the value in W
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CE   0085           00355     MOVWF   PORTA              ; Turn on the selected LED
00CF   2???           00356     CALL    OneSecondDelay     ; Wait for 1 second (ON period)
00D0   0185           00357     CLRF    PORTA              ; Turn off all LEDs
00D1   2???           00358     CALL    OneSecondDelay     ; Wait for 1 second (OFF period)
00D2   0008           00359     RETURN
                      00360 
00D3                  00361 TurnOffLED:
00D3   0185           00362     CLRF PORTA      ; Clear PORTA to turn off LEDs
00D4   0008           00363     RETURN
                      00364 
                      00365 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00366 
00D5                  00367 DisplayLevel:
00D5   2???           00368         CALL ClearDisplay
00D6   3080           00369         MOVLW 0x80 ; Position to first row
00D7   10F4           00370         BCF Select, RS ; Command mode
00D8   2???           00371         CALL send
00D9   14F4           00372         BSF Select, RS ; Data mode
                      00373         
00DA   304C           00374         MOVLW 'L'
00DB   2???           00375         CALL send
00DC   3045           00376         MOVLW 'E'
00DD   2???           00377         CALL send
00DE   3056           00378         MOVLW 'V'
00DF   2???           00379         CALL send
00E0   3045           00380         MOVLW 'E'
00E1   2???           00381         CALL send
00E2   304C           00382         MOVLW 'L'
00E3   2???           00383         CALL send
                      00384         
00E4   3020           00385         MOVLW ' '
00E5   2???           00386         CALL send
                      00387 
00E6   0853           00388         MOVF   Score, W   ; Load the value of Score into W
00E7   3E30           00389         ADDLW  D'48'      ; Add 48 (decimal) = 0x30 (hex) to W (convert to ASCII)
00E8   2???           00390         CALL   send       ; Send the ASCII value to the display         
00E9   0008           00391         RETURN
                      00392 
                      00393 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00394 
00EA                  00395 DisplayTryagain:
                      00396 
00EA   2???           00397         CALL ClearDisplay
00EB   3080           00398         MOVLW 0x80 ; Position to first row
00EC   10F4           00399         BCF Select, RS ; Command mode
00ED   2???           00400         CALL send
00EE   14F4           00401         BSF Select, RS ; Data mode
                      00402         
00EF   3054           00403     MOVLW   'T'
00F0   2???           00404     CALL    send
00F1   3072           00405     MOVLW   'r'
00F2   2???           00406     CALL    send    
00F3   3079           00407     MOVLW   'y'
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F4   2???           00408     CALL    send       
00F5   3020           00409     MOVLW   ' '
00F6   2???           00410     CALL    send   
00F7   3061           00411     MOVLW   'a'
00F8   2???           00412     CALL    send
00F9   3067           00413     MOVLW   'g'
00FA   2???           00414     CALL    send   
00FB   3061           00415     MOVLW   'a'
00FC   2???           00416     CALL    send  
00FD   3069           00417     MOVLW   'i'
00FE   2???           00418     CALL    send   
00FF   306E           00419     MOVLW   'n'
0100   2???           00420     CALL    send        
                      00421 
0101   3020           00422         MOVLW ' '
0102   2???           00423         CALL send
                      00424 
0103   0863           00425         MOVF   Lives, W   ; Load the value of Lives into W
0104   3E30           00426         ADDLW  D'48'      ; Add 48 (decimal) = 0x30 (hex) to W (convert to ASCII)
0105   2???           00427         CALL   send       ; Send the ASCII value to the display         
                      00428     ; Wait for 3 seconds
0106   3003           00429     MOVLW   D'3'
0107   2???           00430     CALL    xseconds
                      00431     
                      00432    
                      00433     ; Check if Lives is 0
0108   0863           00434     MOVF    Lives, W        ; Load Lives into W register
0109   1903           00435     BTFSC   STATUS, Z       ; Check if Lives == 0 (Zero flag set)
010A   2???           00436     GOTO    DisplayGameover ; If Lives == 0, go to DisplayGameover
                      00437 
010B   3001           00438         MOVLW D'1'              ; Load the literal value 1 into W
010C   02E3           00439         SUBWF Lives, F          ; Subtract W from Lives (Lives = Lives - 1) 
                      00440 
                      00441     ; Check if Score == 1
010D   0853           00442     MOVF    Score, W        ; Load Score into W register
010E   3C01           00443     SUBLW   D'1'            ; Subtract 1 from Score (W = 1 - Score)
010F   1903           00444     BTFSC   STATUS, Z       ; Check if the result is zero (Score == 1)
0110   2???           00445     GOTO    StartLevel1     ; If Score == 1, go to StartLevel1
                      00446     ; Check if Score > 1
0111   0853           00447     MOVF    Score, W        ; Load Score into W register
0112   3C01           00448     SUBLW   D'1'            ; Subtract 1 from Score (W = 1 - Score)
0113   1C03           00449     BTFSS   STATUS, C       ; Check if Carry flag is set (Score > 1)
0114   2???           00450     GOTO    NextLeveL       ; If Score > 1, go to NextLevel
                      00451     ; Default case (shouldn't reach here unless something unexpected happens)
                      00452                 
                      00453 
0115   2???           00454     GOTO    StartLevel1     ; Default behavior: go to StartLevel1
                      00455 
                      00456 ; Display "Game Over" and restart the game
0116                  00457 DisplayGameover:
0116   2???           00458         CALL ClearDisplay
0117   3080           00459         MOVLW 0x80 ; Position to first row
0118   10F4           00460         BCF Select, RS ; Command mode
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0119   2???           00461         CALL send
011A   14F4           00462         BSF Select, RS ; Data mode
                      00463 
011B   3047           00464     MOVLW   'G'
011C   2???           00465     CALL    send
011D   3061           00466     MOVLW   'a'
011E   2???           00467     CALL    send    
011F   306D           00468     MOVLW   'm'
0120   2???           00469     CALL    send       
0121   3065           00470     MOVLW   'e'
0122   2???           00471     CALL    send   
0123   3020           00472     MOVLW   ' '
0124   2???           00473     CALL    send
0125   306F           00474     MOVLW   'o'
0126   2???           00475     CALL    send   
0127   3076           00476     MOVLW   'v'
0128   2???           00477     CALL    send  
0129   3065           00478     MOVLW   'e'
012A   2???           00479     CALL    send   
012B   3072           00480     MOVLW   'r'
012C   2???           00481     CALL    send
                      00482     ; Wait for 3 seconds
012D   3003           00483     MOVLW   D'3'
012E   2???           00484     CALL    xseconds
                      00485 
012F   3003           00486         MOVLW D'3'
0130   00E3           00487         MOVWF Lives ; give user 3 lives in each reset
                      00488 
0131   2???           00489     GOTO StartLevel1        ; Restart the game
                      00490 
                      00491 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0132                  00492 DisplayCongratulation:
0132   2???           00493     CALL ClearDisplay       ; Clear the display
0133   3080           00494     MOVLW   0x80       ; Position to first row
0134   10F4           00495     BCF     Select, RS ; Command mode
0135   2???           00496     CALL    send
0136   14F4           00497     BSF     Select, RS ; Data mode
0137   3043           00498     MOVLW   'C'
0138   2???           00499     CALL    send
0139   306F           00500     MOVLW   'o'
013A   2???           00501     CALL    send    
013B   306E           00502     MOVLW   'n'
013C   2???           00503     CALL    send       
013D   3067           00504     MOVLW   'g'
013E   2???           00505     CALL    send   
013F   3072           00506     MOVLW   'r'
0140   2???           00507     CALL    send
0141   3061           00508     MOVLW   'a'
0142   2???           00509     CALL    send   
0143   3074           00510     MOVLW   't'
0144   2???           00511     CALL    send  
0145   3075           00512     MOVLW   'u'
0146   2???           00513     CALL    send   
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0147   306C           00514     MOVLW   'l'
0148   2???           00515     CALL    send        
0149   3061           00516     MOVLW   'a'
014A   2???           00517     CALL    send     
014B   3069           00518     MOVLW   'i'
014C   2???           00519     CALL    send 
014D   306E           00520     MOVLW   'n'
014E   2???           00521     CALL    send 
014F   3073           00522     MOVLW   's'
0150   2???           00523     CALL    send 
0151   3003           00524         MOVLW   D'3'
0152   2???           00525         CALL xseconds
0153   0008           00526     RETURN
                      00527 
                      00528 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0154                  00529 displayPlay:
0154   2???           00530     CALL ClearDisplay       ; Clear the display
0155   3080           00531     MOVLW   0x80       ; Position to first row
0156   10F4           00532     BCF     Select, RS ; Command mode
0157   2???           00533     CALL    send
0158   14F4           00534     BSF     Select, RS ; Data mode
0159   3050           00535     MOVLW   'P'
015A   2???           00536     CALL    send
015B   306C           00537     MOVLW   'l'
015C   2???           00538     CALL    send    
015D   3061           00539     MOVLW   'a'
015E   2???           00540     CALL    send       
015F   3079           00541     MOVLW   'y'
0160   2???           00542     CALL    send   
0161   0008           00543     RETURN
                      00544 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0162                  00545 DisplayTimeover:
0162   2???           00546         CALL ClearDisplay       ; Clear the display
0163   3080           00547     MOVLW   0x80       ; Position to first row
0164   10F4           00548     BCF     Select, RS ; Command mode
0165   2???           00549     CALL    send
0166   14F4           00550     BSF     Select, RS ; Data mode
0167   3054           00551     MOVLW   'T'
0168   2???           00552     CALL    send
0169   3069           00553     MOVLW   'i'
016A   2???           00554     CALL    send    
016B   306D           00555     MOVLW   'm'
016C   2???           00556     CALL    send       
016D   3065           00557     MOVLW   'e'
016E   2???           00558     CALL    send   
016F   3020           00559     MOVLW   ' '
0170   2???           00560     CALL    send
0171   306F           00561     MOVLW   'o'
0172   2???           00562     CALL    send   
0173   3076           00563     MOVLW   'v'
0174   2???           00564     CALL    send  
0175   3065           00565     MOVLW   'e'
0176   2???           00566     CALL    send   
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0177   3072           00567     MOVLW   'r'
0178   2???           00568     CALL    send        
                      00569 
0179   3003           00570         MOVLW   D'3'
017A   2???           00571         CALL xseconds
017B   2???           00572     GOTO WaitForButtonPress
                      00573 
017C                  00574 DisplayStart:
017C   3080           00575     MOVLW   0x80       ; Position to first row
017D   10F4           00576     BCF     Select, RS ; Command mode
017E   2???           00577     CALL    send
017F   14F4           00578     BSF     Select, RS ; Data mode
0180   3020           00579     MOVLW   ' '
0181   2???           00580     CALL    send
0182   3053           00581     MOVLW   'S'
0183   2???           00582     CALL    send    
0184   3074           00583     MOVLW   't'
0185   2???           00584     CALL    send       
0186   3061           00585     MOVLW   'a'
0187   2???           00586     CALL    send   
0188   3072           00587     MOVLW   'r'
0189   2???           00588     CALL    send 
018A   3074           00589     MOVLW   't'
018B   2???           00590     CALL    send 
018C   0008           00591         RETURN
                      00592 
018D                  00593 ClearDisplay:
018D   3001           00594         MOVLW 0x01 ; Clear display command
018E   10F4           00595         BCF Select, RS ; Command mode
018F   2???           00596         CALL send
0190   0008           00597         RETURN
                      00598 
                      00599 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0191                  00600 DisplayMessage:
0191   3080           00601         MOVLW 0x80 ; Position to first row
0192   10F4           00602         BCF Select, RS ; Command mode
0193   2???           00603         CALL send
0194   14F4           00604         BSF Select, RS ; Data mode
                      00605         ; First line: "Press any button"
0195   3050           00606         MOVLW 'P'
0196   2???           00607         CALL send
0197   3072           00608         MOVLW 'r'
0198   2???           00609         CALL send
0199   3065           00610         MOVLW 'e'
019A   2???           00611         CALL send
019B   3073           00612         MOVLW 's'
019C   2???           00613         CALL send
019D   3073           00614         MOVLW 's'
019E   2???           00615         CALL send
019F   3020           00616         MOVLW ' '
01A0   2???           00617         CALL send
01A1   3061           00618         MOVLW 'a'
01A2   2???           00619         CALL send
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A3   306E           00620         MOVLW 'n'
01A4   2???           00621         CALL send
01A5   3079           00622         MOVLW 'y'
01A6   2???           00623         CALL send
01A7   3020           00624         MOVLW ' '
01A8   2???           00625         CALL send
01A9   3062           00626         MOVLW 'b'
01AA   2???           00627         CALL send
01AB   3075           00628         MOVLW 'u'
01AC   2???           00629         CALL send
01AD   3074           00630         MOVLW 't'
01AE   2???           00631         CALL send
01AF   3074           00632         MOVLW 't'
01B0   2???           00633         CALL send
01B1   306F           00634         MOVLW 'o'
01B2   2???           00635         CALL send
01B3   306E           00636         MOVLW 'n'
01B4   2???           00637         CALL send
                      00638         
01B5   30C0           00639         MOVLW 0xC0 ; Position to second row
01B6   10F4           00640         BCF Select, RS ; Command mode
01B7   2???           00641         CALL send
01B8   14F4           00642         BSF Select, RS ; Data mode
                      00643         
                      00644         ; Second line: "to start"
01B9   3074           00645         MOVLW 't'
01BA   2???           00646         CALL send
01BB   306F           00647         MOVLW 'o'
01BC   2???           00648         CALL send
01BD   3020           00649         MOVLW ' '
01BE   2???           00650         CALL send
01BF   3073           00651         MOVLW 's'
01C0   2???           00652         CALL send
01C1   3074           00653         MOVLW 't'
01C2   2???           00654         CALL send
01C3   3061           00655         MOVLW 'a'
01C4   2???           00656         CALL send
01C5   3072           00657         MOVLW 'r'
01C6   2???           00658         CALL send
01C7   3074           00659         MOVLW 't'
01C8   2???           00660         CALL send
                      00661         
01C9   0008           00662         RETURN
                      00663 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
01CA                  00664 OneSecondDelay:
                      00665     ; Delay for approximately 1 second
01CA   300A           00666     MOVLW 0xA
01CB   00C6           00667     MOVWF Index
01CC                  00668 DelayOuter:
Warning[202]: Argument out of range.  Least significant bits used.
01CC   30E8           00669     MOVLW 0x3E8
01CD   00C7           00670     MOVWF Current_char
01CE                  00671 DelayMiddle:
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[202]: Argument out of range.  Least significant bits used.
01CE   3090           00672     MOVLW 0x190
01CF   00B9           00673     MOVWF Timer
01D0                  00674 DelayInner:
01D0   0000           00675     NOP
01D1   0BB9           00676     DECFSZ Timer, F
01D2   2???           00677     GOTO DelayInner
01D3   0BC7           00678     DECFSZ Current_char, F
01D4   2???           00679     GOTO DelayMiddle
01D5   0BC6           00680     DECFSZ Index, F
01D6   2???           00681     GOTO DelayOuter
01D7   0008           00682     RETURN
Warning[205]: Found directive in column 1. (INCLUDE)
                      00683 INCLUDE "LCDIS.INC"
                      00001 ;--------------------------------------------------------------
                      00002 ;       LCDIS.INC               MPB     19-12-05
                      00003 ;
                      00004 ;       Include file to operate 16x2 LCD display
                      00005 ;       Uses GPR 70 - 75
                      00006 ;       
                      00007 ;       Final version
                      00008 ;--------------------------------------------------------------
                      00009 
  00000070            00010 Timer1  EQU     70              ; 1ms count register
  00000071            00011 TimerX  EQU     71              ; Xms count register
  00000072            00012 Var     EQU     72              ; Output variable
  00000073            00013 Point   EQU     73              ; Program table pointer
  00000074            00014 Select  EQU     74              ; Used to set or clear RS bit
  00000075            00015 OutCod  EQU     75              ; Temp store for output code
                      00016 
  00000001            00017 RS      EQU     1               ; Register select output bit
  00000002            00018 E       EQU     2               ; Enable display input
                      00019 
                      00020 
                      00021 ;--------------------------------------------------------------
                      00022 ;       1ms delay with 1us cycle time (1000 cycles)
                      00023 ;--------------------------------------------------------------
01D8   30F9           00024 onems   MOVLW   D'249'          ; Count for 1ms delay 
01D9   00F0           00025         MOVWF   Timer1          ; Load count
01DA   0000           00026 loop1   NOP                     ; Pad for 4 cycle loop
Message[305]: Using default destination of 1 (file).
01DB   0BF0           00027         DECFSZ  Timer1          ; Count
01DC   2???           00028         GOTO    loop1           ; until Z
01DD   0008           00029         RETURN                  ; and finish
                      00030 
                      00031 ;--------------------------------------------------------------
                      00032 ;       Delay Xms
                      00033 ;       Receives count in W, uses Onems
                      00034 ;--------------------------------------------------------------
01DE   00F1           00035 xms     MOVWF   TimerX          ; Count for X ms
01DF   2???           00036 loopX   CALL    onems           ; Delay 1ms
Message[305]: Using default destination of 1 (file).
01E0   0BF1           00037         DECFSZ  TimerX          ; Repeat X times 
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E1   2???           00038         GOTO    loopX           ; until Z
01E2   0008           00039         RETURN                  ; and finish
                      00040 
                      00041 ;--------------------------------------------------------------
                      00042 ;       Generate data/command clock siganl E
                      00043 ;--------------------------------------------------------------
01E3   1508           00044 pulseE  BSF     PORTD,E         ; Set E high
01E4   2???           00045         CALL    onems           ; Delay 1ms
01E5   1108           00046         BCF     PORTD,E         ; Reset E low
01E6   2???           00047         CALL    onems           ; Delay 1ms
01E7   0008           00048         RETURN                  ; done
                      00049 
                      00050 ;--------------------------------------------------------------
                      00051 ;       Send a command byte in two nibbles from RB4 - RB7
                      00052 ;       Receives command in W, uses PulseE and Onems
                      00053 ;--------------------------------------------------------------
01E8   00F5           00054 send    MOVWF   OutCod          ; Store output code
01E9   39F0           00055         ANDLW   0F0             ; Clear low nybble
01EA   0088           00056         MOVWF   PORTD           ; Output high nybble
01EB   18F4           00057         BTFSC   Select,RS       ; Test RS bit
01EC   1488           00058         BSF     PORTD,RS        ; and set for data
01ED   2???           00059         CALL    pulseE          ; and clock display register
01EE   2???           00060         CALL    onems           ; wait 1ms for display
                      00061 
Message[305]: Using default destination of 1 (file).
01EF   0EF5           00062         SWAPF   OutCod          ; Swap low and high nybbles 
01F0   0875           00063         MOVF    OutCod,W        ; Retrieve output code
01F1   39F0           00064         ANDLW   0F0             ; Clear low nybble
01F2   0088           00065         MOVWF   PORTD           ; Output low nybble
01F3   18F4           00066         BTFSC   Select,RS       ; Test RS bit
01F4   1488           00067         BSF     PORTD,RS        ; and set for data
01F5   2???           00068         CALL    pulseE          ; and clock display register
01F6   2???           00069         CALL    onems           ; wait 1ms for display
01F7   0008           00070         RETURN                  ; done
                      00071 
                      00072 ;--------------------------------------------------------------
                      00073 ;       Initialise the display
                      00074 ;       Uses Send
                      00075 ;--------------------------------------------------------------
01F8   3064           00076 inid    MOVLW   D'100'          ; Load count for 100ms delay
01F9   2???           00077         CALL    xms             ; and wait for display start
01FA   30F0           00078         MOVLW   0F0             ; Mask for select code
01FB   00F4           00079         MOVWF   Select          ; High nybble not masked
                      00080 
01FC   3030           00081         MOVLW   0x30            ; Load initial nibble
01FD   0088           00082         MOVWF   PORTD           ; and output it to display
01FE   2???           00083         CALL    pulseE          ; Latch initial code
01FF   3005           00084         MOVLW   D'5'            ; Set delay 5ms
0200   2???           00085         CALL    xms             ; and wait
0201   2???           00086         CALL    pulseE          ; Latch initial code again
0202   2???           00087         CALL    onems           ; Wait 1ms
0203   2???           00088         CALL    pulseE          ; Latch initial code again
0204   1208           00089         BCF     PORTD,4         ; Set 4-bit mode
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0205   2???           00090         CALL    pulseE          ; Latch it
                      00091         
0206   3028           00092         MOVLW   0x28            ; Set 4-bit mode, 2 lines
0207   2???           00093         CALL    send            ; and send code
0208   3008           00094         MOVLW   0x08            ; Switch off display
0209   2???           00095         CALL    send            ; and send code
020A   3001           00096         MOVLW   0x01            ; Code to clear display
020B   2???           00097         CALL    send            ; and send code
020C   3006           00098         MOVLW   0x06            ; Enable cursor auto inc  
020D   2???           00099         CALL    send            ; and send code
020E   3080           00100         MOVLW   0x80            ; Zero display address
020F   2???           00101         CALL    send            ; and send code
0210   300C           00102         MOVLW   0x0C            ; Turn on display  
0211   2???           00103         CALL    send            ; and send code
                      00104 
0212   0008           00105         RETURN                  ; Done
                      00106 
                      00107 ;--------------------------------------------------------------
                      00108 ;       Delay 1 seconds (1000ms) 
                      00109 ;       Uses xms
                      00110 ;--------------------------------------------------------------
                      00111 ; nested loop of xms since the maximum number can be in W is 255
0213   30FA           00112 onesecond       MOVLW   D'250'          ; Count for 1 second
0214   2???           00113         CALL    xms                     ; Delay 1 second
0215   30FA           00114         MOVLW   D'250'          ; Count for 1 second
0216   2???           00115         CALL    xms                     ; Delay 1 second
0217   30FA           00116         MOVLW   D'250'          ; Count for 1 second
0218   2???           00117         CALL    xms                     ; Delay 1 second
0219   30FA           00118         MOVLW   D'250'          ; Count for 1 second
021A   2???           00119         CALL    xms                     ; Delay 1 second
021B   0008           00120         RETURN                          ; and finish
                      00121 
                      00122 ;--------------------------------------------------------------
                      00123 ;       xsecond delay
                      00124 ;       Receives count in W, uses onesecond
                      00125 ;--------------------------------------------------------------
021C   00F2           00126 xseconds        MOVWF   Var             ; Store count
021D   2???           00127 loopx   CALL    onesecond       ; Delay 1 second
Message[305]: Using default destination of 1 (file).
021E   0BF2           00128         DECFSZ  Var                     ; Repeat count times
021F   2???           00129         GOTO    loopx           ; until Z
0220   0008           00130         RETURN                          ; and finish
                      00131         
                      00132         
                      00133 ;clear
Warning[205]: Found directive in column 1. (END)
3731                  00684 END
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE 17


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AllInputsCorrect                  000000A3
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BLUE_BTN                          00000001
BLUE_LED                          00000000
BRGH                              00000002
BlinkCount                        00000049
BlinkLoop                         0000002F
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

CIS                               00000003
CKE                               00000006
CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
Char                              00000030
Characters                        00000048
CheckTimer1                       000000B1
CheckUserInput                    0000006C
CheckinputSequence                0000009A
ClearDisplay                      0000018D
Continue                          00000091
Count                             00000052
CurrentInputIndex                 00000055
Current_char                      00000047
Cursor                            00000028
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
DelayInner                        000001D0
DelayMiddle                       000001CE
DelayOuter                        000001CC
DisplayCongratulation             00000132
DisplayGameover                   00000116
DisplayLevel                      000000D5
DisplayMessage                    00000191
DisplayStart                      0000017C
DisplayTimeover                   00000162
DisplayTryagain                   000000EA
E                                 00000002
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GREEN_BTN                         00000002
GREEN_LED                         00000001
GenerateAdditional                00000064
GenerateInitial                   00000054
GetRandomLED                      000000C7
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INITIALIZE                        00000002
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
IncrementScore                    000000BE
Index                             00000046
InputCheckLoop                    00000078
InputCount                        00000054
LED_States                        00000050
LightUpLED                        000000CE
Lives                             00000063
MoveToNextInput                   0000009F
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NextLeveL                         00000047
NoAddition                        0000006B
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

OneSecondDelay                    000001CA
OutCod                            00000075
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Point                             00000073
R                                 00000002
RBIE                              00000003
RBIF                              00000000
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
READ_WRITE                        00000002
RED_BTN                           00000003
RED_LED                           00000002
RP0                               00000005
RP1                               00000006
RS                                00000001
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_W                               00000002
RandomCounter                     00000052
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

RandomLEDSequence                 0000004E
S                                 00000003
SEN                               00000000
SEQ1                              00000010
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
Score                             00000053
Seed                              00000051
Select                            00000074
SequencePointer                   00000056
SkipTimerCheck                    00000083
StartLevel1                       00000043
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEMP1                             00000054
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
TRISD                             00000088
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Timer                             00000039
Timer1                            00000070
TimerX                            00000071
TurnOffLED                        000000D3
UA                                00000001
UpdateSeed                        000000C0
UserInput                         00000057
Var                               00000072
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WaitForButtonPress                0000002C
WaitForInput                      00000080
WaitLoop                          0000003A
Wrong                             00000064
WrongInput                        00000097
YELLOW_BTN                        00000004
YELLOW_LED                        00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_DEBUG_OFF                        00003FFF
MPASM  5.43                          CODE.ASM   2-2-2025  22:58:06         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

_DEBUG_ON                         000037FF
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F877A                         00000001
__DEBUG                           1
checkWhichbutton                  000000A6
displayPlay                       00000154
inid                              000001F8
loop1                             000001DA
loopX                             000001DF
loopx                             0000021D
onems                             000001D8
onesecond                         00000213
pulseE                            000001E3
send                              000001E8
timerCounter                      00000062
xms                               000001DE
xseconds                          0000021C

Errors   :     0
Warnings :     7 reported,     0 suppressed
Messages :    15 reported,     0 suppressed

